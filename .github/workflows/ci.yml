name: Alicenet CI

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  go-unit-tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-20.04 ]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/alicenet-config
      - run: go build ./...
      - name: Set up gotestfmt
        run: go install github.com/haveyoudebuggedit/gotestfmt/v2/cmd/gotestfmt@latest
      - name: Run unit tests
        timeout-minutes: 20
        run: |
          set -euo pipefail
          go test -race -json -covermode=atomic -coverprofile=coverage.out ./... 2>&1 | tee /tmp/gotest.log | gotestfmt
      - uses: codecov/codecov-action@v3
        with:
          files: ./coverage.out
          verbose: true

  go-integration-tests:
    runs-on: ${{ matrix.os }}
    needs: go-unit-tests
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-20.04 ]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/alicenet-config
      - name: Set up gotestfmt
        run: go install github.com/haveyoudebuggedit/gotestfmt/v2/cmd/gotestfmt@latest
      - name: Run tests
        run: |
          set -euo pipefail
#          ./scripts/main.sh init 5
#          go test -tags=integration -race -json -timeout=30m ${{ matrix.test-cmd }} 2>&1 | tee /tmp/gotest.log | gotestfmt
          go test -tags=integration_race -race -json -timeout=30m github.com/alicenet/alicenet/layer1/executor/tasks/dkg/tests 2>&1 | tee /tmp/gotest.log | gotestfmt
